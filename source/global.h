#ifndef GLOBAL_H
#define GLOBAL_H

// TODO: I should be using "enum { FIRST, SECOND, THIRD, ... };"
//			 or "enum { WIDTH=45, DEPTH=50 };"
// GameWorld states
#define GAMEWORLD_STATE_UNDERGROUND 0
#define GAMEWORLD_STATE_SURFACE 1
#define GAMEWORLD_STATE_UNDERGROUND_ENEMY 2

// Map tile size
#define WIDTH 60
#define DEPTH 45

// Ant ACTION's
enum Ant_AI
{
ANT_ACTION_WANDER,
ANT_ACTION_FORAGE,
ANT_ACTION_FOLLOW,
ANT_ACTION_ATTACK,
ANT_ACTION_IDLE,
ANT_ACTION_GOHOME
};


// Patch TYPE values
enum PATCH_types
{
PATCH,
PATCH_DIRT,
PATCH_EMPTY,
PATCH_BARRIER,
PATCH_FOOD,
PATCH_EGG,
PATCH_TOP,
// entrance to underground (hill)
PATCH_ENTRANCE
};

// Draw distance.
#define UNDERGROUND_GRID_DRAW 7
#define GRID_SIZE 13

// Draw scale and animation between grid stuff.
// ANIMATION_SIZE must be divisible by 2.
#define ANIMATION_SIZE 20
#define MODEL_SCALE 0.2
#define MODEL_SCALE_INCREMENT 0.01
// there is a built in vector: "GLvector" but it uses ints...
// I'm not that good yet.
typedef struct {
	float x, y, z, d;
} VectorF;



// Observer states:
enum Player_Actions
{
	PLAYER_MOVE_UP,
	PLAYER_MOVE_DOWN,
	PLAYER_MOVE_RIGHT,
	PLAYER_MOVE_LEFT
};

enum Input_Types
{
	// D-PAD.
	PLAYER_HELD_LEFT,
	PLAYER_HELD_RIGHT,
	PLAYER_HELD_UP,
	PLAYER_HELD_DOWN,
	PLAYER_PRESSED_LEFT,
	PLAYER_PRESSED_RIGHT,
	PLAYER_PRESSED_UP,
	PLAYER_PRESSED_DOWN,
	// TOUCHPAD
	PLAYER_TOUCH_TOUCHPAD,
	// BUTTONS
	PLAYER_HELD_A,
	PLAYER_HELD_B,
	PLAYER_HELD_X,
	PLAYER_HELD_Y,
	PLAYER_PRESSED_A,
	PLAYER_PRESSED_B,
	PLAYER_PRESSED_X,
	PLAYER_PRESSED_Y,
	// SHOULDERS
	PLAYER_HELD_SHOULDER_R,
	PLAYER_HELD_SHOULDER_L,
	PLAYER_PRESSED_SHOULDER_R,
	PLAYER_PRESSED_SHOULDER_L
	// SELECT, START
};

#endif
