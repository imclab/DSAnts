Concept:

Sim-Ants / DigDug style game created in a large disk, mario-galaxy style world.
-Decided to go with a grid for now, sphere math was taking way too long.

Both red and black ants will share the same underground world

Initially the game will focus more on the under-ground aspect and building an impenetrable ant-cave and focus less on the above ground aspects.


Development process, Asterisk indicates complete:

*1. Create the 2D underground world.
*	- 2d
*	- destrutable, player
* - basic types:
*		-Dirt
*		-Empty
*		-Surface
*		-Barrier


2. Create basics
*	- Player
*	- Ants
*	- Basic AI
*	- Camera following
	- Player control
*		- D-Pad
*		- Touch, simple (broke this after I made the surface.
		- Touch, dijkstra

*3. Create surface world
*	- Link to underground
*	- Objects (Rocks, Food)
*	-	Object spawns (food on surface).

4. Basic ant functions
*	- hp / death
	- extended statistics (not sure what these are)
*	- Food / Eating
	-	Queen / Egg production
	- Egg / Hatch

6. A.I. / Enemy base.
	- Ant action AI's:
*		-Wander
		-Forage
		-Attack
		-Defend
		-???
	- Base design
*		-simple/random
		-more interesting?

7. Gameplay, 
	- Enemies (Pincer pit, spider, foot, lawnmower)
	- Workers / Breeders / Soldiers
	- Scores
	- Ant combat.

8. Polish
	- Terrain themes (outdoors, patio, kitchen, etc)
	- Object models:
		-dirt
		-barriers
		-???


NOTE: The below was determined to be too much work for too little reward,
      the effect was not as impressive as hoped for so it was scraped for
      a plain old 2D array rendered on a 3D plane.
-------------------------------------------------------------------------
Underground world data structure.

The world is a flat donut, with an unpassable "rock" core at the bottom.
The donut is broken down into SLICES.
A slice is a logical entity which can be loaded in parts.
Slices are stitched together to adjacent slices
Each slice is loaded in entirety in such a way that only 2 slices need to be loaded at once for display purposes.
Each slice is a 2D array.  It does not taper out towards the bottom, as the bottom is "rock" it can be spoofed.

Each slice is broken down into squares which can be:
	-dirt (clearable)
	-cleared (walkable, objects may be placed, can be buried)
	-unpassable (i.e. rock)



